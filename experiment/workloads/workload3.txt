CREATE TABLE wscs with (format = 'PARQUET') AS(
select sold_date_sk
        ,sales_price
  from (select ws_sold_date_sk sold_date_sk
              ,ws_pricing_ext_sales_price sales_price
        from web_sales 
        union all
        select cs_sold_date_sk sold_date_sk
              ,cs_pricing_ext_sales_price sales_price
        from catalog_sales) as aaa
);

CREATE TABLE wswscs with (format = 'PARQUET') AS(
select d_week_seq,
        sum(case when (d_day_name='Sunday') then sales_price else null end) as sun_sales,
        sum(case when (d_day_name='Monday') then sales_price else null end) as mon_sales,
        sum(case when (d_day_name='Tuesday') then sales_price else  null end) as tue_sales,
        sum(case when (d_day_name='Wednesday') then sales_price else null end) as wed_sales,
        sum(case when (d_day_name='Thursday') then sales_price else null end) as thu_sales,
        sum(case when (d_day_name='Friday') then sales_price else null end) as fri_sales,
        sum(case when (d_day_name='Saturday') then sales_price else null end) as sat_sales
 from wscs
     ,date_dim
 where d_date_sk = sold_date_sk
 group by d_week_seq
);

CREATE TABLE y_q2 with (format = 'PARQUET') AS(
select wswscs.d_week_seq as d_week_seq1
        ,sun_sales as sun_sales1
        ,mon_sales as mon_sales1
        ,tue_sales as tue_sales1
        ,wed_sales as wed_sales1
        ,thu_sales as thu_sales1
        ,fri_sales as fri_sales1
        ,sat_sales as sat_sales1
  from wswscs,date_dim 
  where date_dim.d_week_seq = wswscs.d_week_seq and
        d_year = 2001
);

CREATE TABLE z_q2 with (format = 'PARQUET') AS(
select wswscs.d_week_seq as d_week_seq2
        ,sun_sales as sun_sales2
        ,mon_sales as mon_sales2
        ,tue_sales as tue_sales2
        ,wed_sales as wed_sales2
        ,thu_sales as thu_sales2
        ,fri_sales as fri_sales2
        ,sat_sales as sat_sales2
  from wswscs
      , date_dim
  where date_dim.d_week_seq = wswscs.d_week_seq and
        d_year = 2002
);

CREATE TABLE query2_result with (format = 'PARQUET') AS(
 select d_week_seq1
       ,sun_sales1/sun_sales2 AS ratio1
       ,mon_sales1/mon_sales2 AS ratio2
       ,tue_sales1/tue_sales2 AS ratio3
       ,wed_sales1/wed_sales2 AS ratio4
       ,thu_sales1/thu_sales2 AS ratio5
       ,fri_sales1/fri_sales2 AS ratio6
       ,sat_sales1/sat_sales2 AS ratio7
 from
 y_q2, z_q2
 where d_week_seq1=d_week_seq2-53
 order by d_week_seq1
);

CREATE TABLE wss with (format = 'PARQUET') AS(
select d_week_seq,
        ss_sold_store_sk,
        sum(case when (d_day_name='Sunday') then ss_pricing_sales_price else null end) as sun_sales,
        sum(case when (d_day_name='Monday') then ss_pricing_sales_price else null end) as mon_sales,
        sum(case when (d_day_name='Tuesday') then ss_pricing_sales_price else  null end) as tue_sales,
        sum(case when (d_day_name='Wednesday') then ss_pricing_sales_price else null end) as wed_sales,
        sum(case when (d_day_name='Thursday') then ss_pricing_sales_price else null end) as thu_sales,
        sum(case when (d_day_name='Friday') then ss_pricing_sales_price else null end) as fri_sales,
        sum(case when (d_day_name='Saturday') then ss_pricing_sales_price else null end) as sat_sales
 from store_sales, date_dim
 where d_date_sk = ss_sold_date_sk
 group by d_week_seq,ss_sold_store_sk
);

CREATE TABLE y_q59 with (format = 'PARQUET') AS(
select w_store_name as w_store_name1, wss.d_week_seq as d_week_seq1
        ,w_store_id as w_store_id1,sun_sales as sun_sales1
        ,mon_sales as mon_sales1,tue_sales as tue_sales1
        ,wed_sales as wed_sales1,thu_sales as thu_sales1
        ,fri_sales as fri_sales1,sat_sales as sat_sales1
  from wss, store, date_dim d
  where d.d_week_seq = wss.d_week_seq and
        ss_sold_store_sk = w_store_sk and 
        d_year = 2001
);

CREATE TABLE x_q59 with (format = 'PARQUET') AS(
select w_store_name as w_store_name2, wss.d_week_seq as d_week_seq2
        ,w_store_id as w_store_id2,sun_sales as sun_sales2
        ,mon_sales as mon_sales2,tue_sales as tue_sales2
        ,wed_sales as wed_sales2,thu_sales as thu_sales2
        ,fri_sales as fri_sales2,sat_sales as sat_sales2
  from wss, store, date_dim d
  where d.d_week_seq = wss.d_week_seq and
        ss_sold_store_sk = w_store_sk and 
        d_year = 2002
);

CREATE TABLE query59_result with (format = 'PARQUET') AS(
 select w_store_name1,w_store_id1,d_week_seq1
       ,sun_sales1/sun_sales2 AS ratio1,mon_sales1/mon_sales2 AS ratio2
       ,tue_sales1/tue_sales2 AS ratio3,wed_sales1/wed_sales2 AS ratio4,thu_sales1/thu_sales2 AS ratio5
       ,fri_sales1/fri_sales2 AS ratio6,sat_sales1/sat_sales2 AS ratio7
 from
 y_q59, x_q59
 where w_store_id1=w_store_id2
   and d_week_seq1=d_week_seq2-52
 order by w_store_name1,w_store_id1,d_week_seq1
limit 100
);

CREATE TABLE year_total with (format = 'PARQUET') AS(
select c_customer_id as customer_id
       ,c_first_name as customer_first_name
       ,c_last_name as customer_last_name
       ,d_year as year
       ,sum(ss_pricing_net_paid) as year_total
       ,'s' sale_type
 from customer
     , store_sales
     , date_dim
 where c_customer_sk = ss_sold_customer_sk
   and ss_sold_date_sk = d_date_sk
   and d_year in (2000, 2001)
 group by c_customer_id
         ,c_first_name
         ,c_last_name
         ,d_year
 union all
 select c_customer_id as customer_id
       ,c_first_name as customer_first_name
       ,c_last_name as customer_last_name
       ,d_year as year
       ,sum(ws_pricing_net_paid) as year_total
       ,'w' sale_type
 from customer
     , web_sales
     , date_dim
 where c_customer_sk = ws_bill_customer_sk
   and ws_sold_date_sk = d_date_sk
   and d_year in (2000, 2001)
 group by c_customer_id
         ,c_first_name
         ,c_last_name
         ,d_year
);

CREATE TABLE t_s_firstyear with (format = 'PARQUET') AS(
	select * from year_total WHERE
	sale_type = 's' and year = 2000 and year_total > 0
);

CREATE TABLE t_s_secyear with (format = 'PARQUET') AS(
	select * from year_total WHERE
	sale_type = 's' and year = 2001
);

CREATE TABLE t_w_firstyear with (format = 'PARQUET') AS(
	select * from year_total WHERE
	sale_type = 'w' and year = 2000 and year_total > 0
);

CREATE TABLE t_w_secyear with (format = 'PARQUET') AS(
	select * from year_total WHERE
	sale_type = 'w' and year = 2001
);

CREATE TABLE query74_result with (format = 'PARQUET') AS(
 select t_s_secyear.customer_id, t_s_secyear.customer_first_name, t_s_secyear.customer_last_name
 from t_s_firstyear
     , t_s_secyear
     , t_w_firstyear
     , t_w_secyear
 where t_s_secyear.customer_id = t_s_firstyear.customer_id
         and t_s_firstyear.customer_id = t_w_secyear.customer_id
         and t_s_firstyear.customer_id = t_w_firstyear.customer_id
         and case when t_w_firstyear.year_total > 0 then t_w_secyear.year_total / t_w_firstyear.year_total else null end
           > case when t_s_firstyear.year_total > 0 then t_s_secyear.year_total / t_s_firstyear.year_total else null end
 order by t_s_secyear.customer_id, t_s_secyear.customer_first_name, t_s_secyear.customer_last_name
limit 100
);

CREATE TABLE sales_detail with (format = 'PARQUET') AS(
SELECT d_year
             ,i_brand_id
             ,i_class_id
             ,i_category_id
             ,i_manufact_id
             ,cs_pricing_quantity - COALESCE(cr_pricing_quantity,0) AS sales_cnt
             ,cs_pricing_ext_sales_price - COALESCE(cr_pricing_reversed_charge,0.0) AS sales_amt
       FROM catalog_sales JOIN item ON i_item_sk=cs_sold_item_sk
                          JOIN date_dim ON d_date_sk=cs_sold_date_sk
                          LEFT JOIN catalog_returns ON (cs_order_number=cr_order_number 
                                                    AND cs_sold_item_sk=cr_item_sk)
       UNION ALL
       SELECT d_year
             ,i_brand_id
             ,i_class_id
             ,i_category_id
             ,i_manufact_id
             ,ss_pricing_quantity - COALESCE(sr_pricing_quantity,0) AS sales_cnt
             ,ss_pricing_ext_sales_price - COALESCE(sr_pricing_reversed_charge,0.0) AS sales_amt
       FROM store_sales JOIN item ON i_item_sk=ss_sold_item_sk
                        JOIN date_dim ON d_date_sk=ss_sold_date_sk
                        LEFT JOIN store_returns ON (ss_ticket_number=sr_ticket_number 
                                                AND ss_sold_item_sk=sr_item_sk)
       UNION ALL
       SELECT d_year
             ,i_brand_id
             ,i_class_id
             ,i_category_id
             ,i_manufact_id
             ,ws_pricing_quantity - COALESCE(wr_pricing_quantity,0) AS sales_cnt
             ,ws_pricing_ext_sales_price - COALESCE(wr_pricing_reversed_charge,0.0) AS sales_amt
       FROM web_sales JOIN item ON i_item_sk=ws_item_sk
                      JOIN date_dim ON d_date_sk=ws_sold_date_sk
                      LEFT JOIN web_returns ON (ws_order_number=wr_order_number 
                                            AND ws_item_sk=wr_item_sk)
);

CREATE TABLE all_sales with (format = 'PARQUET') AS(
SELECT d_year
       ,i_brand_id
       ,i_class_id
       ,i_category_id
       ,i_manufact_id
       ,SUM(sales_cnt) AS sales_cnt
       ,SUM(sales_amt) AS sales_amt
 FROM sales_detail
 GROUP BY d_year, i_brand_id, i_class_id, i_category_id, i_manufact_id
);

CREATE TABLE query75_result with (format = 'PARQUET') AS(
SELECT prev_yr.d_year AS prev_year
                          ,curr_yr.d_year AS year
                          ,curr_yr.i_brand_id
                          ,curr_yr.i_class_id
                          ,curr_yr.i_category_id
                          ,curr_yr.i_manufact_id
                          ,prev_yr.sales_cnt AS prev_yr_cnt
                          ,curr_yr.sales_cnt AS curr_yr_cnt
                          ,curr_yr.sales_cnt-prev_yr.sales_cnt AS sales_cnt_diff
                          ,curr_yr.sales_amt-prev_yr.sales_amt AS sales_amt_diff
 FROM all_sales curr_yr, all_sales prev_yr
 WHERE curr_yr.i_brand_id=prev_yr.i_brand_id
   AND curr_yr.i_class_id=prev_yr.i_class_id
   AND curr_yr.i_category_id=prev_yr.i_category_id
   AND curr_yr.i_manufact_id=prev_yr.i_manufact_id
   AND curr_yr.d_year=2001
   AND prev_yr.d_year=2000
   AND CAST(curr_yr.sales_cnt AS DECIMAL(17,2))/CAST(prev_yr.sales_cnt AS DECIMAL(17,2))<0.9
 ORDER BY sales_cnt_diff,sales_amt_diff
limit 100
);
