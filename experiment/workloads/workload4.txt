CREATE TABLE avg_q44 with (format = 'PARQUET') AS(
select avg(ss_pricing_net_profit) rank_col
    from store_sales
    group by ss_sold_item_sk
);

CREATE TABLE ver1_base with (format = 'PARQUET') AS(
select ss_sold_item_sk item_sk,avg(ss_pricing_net_profit) rank_col 
                 from store_sales ss1
                 group by ss_sold_item_sk
                 having avg(ss_pricing_net_profit) > 0.9*(select avg(rank_col) from avg_q44)
);

CREATE TABLE ver1_rank with (format = 'PARQUET') AS(
select item_sk,rank() over (order by rank_col asc) rnk
           from ver1_base
);

CREATE TABLE asceding with (format = 'PARQUET') AS(
select *
     from ver1_rank
     where rnk  < 11
);

CREATE TABLE ver2_base with (format = 'PARQUET') AS(
select ss_sold_item_sk item_sk,avg(ss_pricing_net_profit) rank_col 
                 from store_sales ss1
                 group by ss_sold_item_sk
                 having avg(ss_pricing_net_profit) > 0.9*(select avg(rank_col) from avg_q44)
);

CREATE TABLE ver2_rank with (format = 'PARQUET') AS(
select item_sk,rank() over (order by rank_col desc) rnk
           from ver2_base
);

CREATE TABLE descending with (format = 'PARQUET') AS(
select *
     from ver2_rank
     where rnk  < 11
);

CREATE TABLE query44_result with (format = 'PARQUET') AS(
select asceding.rnk, i1.i_product_name best_performing, i2.i_product_name worst_performing
from
asceding,
descending,
item i1,
item i2
where asceding.rnk = descending.rnk 
  and i1.i_item_sk=asceding.item_sk
  and i2.i_item_sk=descending.item_sk
order by asceding.rnk
limit 100
);

CREATE TABLE in_web with (format = 'PARQUET') AS(
select ws.ws_item_sk as item
 		,(cast(sum(coalesce(wr.wr_pricing_quantity,0)) as decimal(15,4))/
 		cast(sum(coalesce(ws.ws_pricing_quantity,0)) as decimal(15,4) )) as return_ratio
 		,(cast(sum(coalesce(wr.wr_pricing_reversed_charge,0)) as decimal(15,4))/
 		cast(sum(coalesce(ws.ws_pricing_net_paid,0)) as decimal(15,4) )) as currency_ratio
 		from 
 		 web_sales ws left outer join web_returns wr 
 			on (ws.ws_order_number = wr.wr_order_number and 
 			ws.ws_item_sk = wr.wr_item_sk)
                 ,date_dim
 		where 
		    wr.wr_pricing_reversed_charge > 1
 			and ws.ws_pricing_net_profit > 1
                         and ws.ws_pricing_net_paid > 0
                         and ws.ws_pricing_quantity > 0
                         and ws_sold_date_sk = d_date_sk
                         and d_year = 2001
 		group by ws.ws_item_sk
);

CREATE TABLE web_rank with (format = 'PARQUET') AS(
 	select 
 	 item
 	,return_ratio
 	,currency_ratio
 	,rank() over (order by return_ratio) as return_rank
 	,rank() over (order by currency_ratio) as currency_rank
 	from
 	in_web
);

CREATE TABLE in_cat with (format = 'PARQUET') AS(
select 
 		cs.cs_sold_item_sk as item
 		,(cast(sum(coalesce(cr.cr_pricing_quantity,0)) as decimal(15,4))/
 		cast(sum(coalesce(cs.cs_pricing_quantity,0)) as decimal(15,4) )) as return_ratio
 		,(cast(sum(coalesce(cr.cr_pricing_reversed_charge,0)) as decimal(15,4))/
 		cast(sum(coalesce(cs.cs_pricing_net_paid,0)) as decimal(15,4) )) as currency_ratio
 		from 
 		catalog_sales cs left outer join catalog_returns cr
 			on (cs.cs_order_number = cr.cr_order_number and 
 			cs.cs_sold_item_sk = cr.cr_item_sk)
                ,date_dim
 		where 
		    cr.cr_pricing_reversed_charge > 1
 			and cs.cs_pricing_net_profit > 1
                         and cs.cs_pricing_net_paid > 0
                         and cs.cs_pricing_quantity > 0
                         and cs_sold_date_sk = d_date_sk
                         and d_year = 2001
                 group by cs.cs_sold_item_sk
);

CREATE TABLE catalog_rank with (format = 'PARQUET') AS(
select 
 	 item
 	,return_ratio
 	,currency_ratio
 	,rank() over (order by return_ratio) as return_rank
 	,rank() over (order by currency_ratio) as currency_rank
 	from in_cat
);

CREATE TABLE in_store with (format = 'PARQUET') AS(
select sts.ss_sold_item_sk as item
 		,(cast(sum(coalesce(sr.sr_pricing_quantity,0)) as decimal(15,4))/cast(sum(coalesce(sts.ss_pricing_quantity,0)) as decimal(15,4) )) as return_ratio
 		,(cast(sum(coalesce(sr.sr_pricing_reversed_charge,0)) as decimal(15,4))/cast(sum(coalesce(sts.ss_pricing_net_paid,0)) as decimal(15,4) )) as currency_ratio
 		from 
 		store_sales sts left outer join store_returns sr
 			on (sts.ss_ticket_number = sr.sr_ticket_number and sts.ss_sold_item_sk = sr.sr_item_sk)
                ,date_dim
 		where 
		sr.sr_pricing_reversed_charge > 1
 			and sts.ss_pricing_net_profit > 1
                         and sts.ss_pricing_net_paid > 0 
                         and sts.ss_pricing_quantity > 0
                         and ss_sold_date_sk = d_date_sk
                         and d_year = 2001
 		group by sts.ss_sold_item_sk
);

CREATE TABLE store_q49 with (format = 'PARQUET') AS(
select 
 	 item
 	,return_ratio
 	,currency_ratio
 	,rank() over (order by return_ratio) as return_rank
 	,rank() over (order by currency_ratio) as currency_rank
 	from in_store
);

CREATE TABLE tmp_q49 with (format = 'PARQUET') AS(
select
 'web' as channel
 ,web_rank.item
 ,web_rank.return_ratio
 ,web_rank.return_rank
 ,web_rank.currency_rank
 from web_rank
 where 
 (
 web_rank.return_rank <= 10
 or
 web_rank.currency_rank <= 10
 )
 union
 select 
 'catalog' as channel
 ,catalog_rank.item
 ,catalog_rank.return_ratio
 ,catalog_rank.return_rank
 ,catalog_rank.currency_rank
 from catalog_rank
 where 
 (
 catalog_rank.return_rank <= 10
 or
 catalog_rank.currency_rank <=10
 )
 union
 select 
 'store' as channel
 ,store_q49.item
 ,store_q49.return_ratio
 ,store_q49.return_rank
 ,store_q49.currency_rank
 from store_q49
 where  (
 store_q49.return_rank <= 10
 or 
 store_q49.currency_rank <= 10
));

CREATE TABLE q49_result with (format = 'PARQUET') AS(
 select channel, item, return_ratio, return_rank, currency_rank from
 tmp_q49
 order by 1,4,5,2
 limit 100
);
